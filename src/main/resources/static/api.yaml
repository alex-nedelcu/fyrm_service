openapi: 3.0.1
info:
  title: FYRM Service API docs
  version: 0.0.1
servers:
  - url: /api/v1/fyrm
    description: local

tags:
  - name: authentication
  - name: user
  - name: search-profile
  - name: rent-connection
  - name: chat
  - name: notifications

paths:
  '/authentication/signup':
    post:
      summary: Sign up user
      operationId: signupUser
      tags:
        - authentication
      requestBody:
        description: Contains sign up information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
      responses:
        '200':
          description: Successfully sign up user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupResponse'
        '400':
          description: Invalid sign up information from business perspective.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        '422':
          description: Invalid sign up information from validation perspective or email sending mechanism failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'

  '/authentication/login':
    post:
      summary: Log in user
      operationId: loginUser
      tags:
        - authentication
      requestBody:
        description: Contains log in information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successfully log in user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JwtLoginResponse'
        '400':
          description: Account is not enabled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        '401':
          description: Bad credentials.

  '/authentication/confirmationcode/resend':
    post:
      summary: Resend confirmation code
      operationId: resendConfirmationCode
      tags:
        - authentication
      requestBody:
        description: Contains user id
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendConfirmationCodeRequest'
      responses:
        '204':
          description: Successfully resent confirmation code.
        '400':
          description: User does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'

  '/authentication/confirm':
    post:
      summary: Confirm user account
      operationId: confirmAccount
      tags:
        - authentication
      requestBody:
        description: Contains user id
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmAccountRequest'
      parameters:
        - in: query
          name: code
          required: true
          schema:
            type: string
          description: Confirmation code used for enabling the account
      responses:
        '200':
          description: Successfully confirm account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '422':
          description: Confirmation code is not associated to any account or it is expired.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessException'
        '400':
          description: Confirmation code query parameters misses.

  '/users/{userId}':
    parameters:
      - $ref: '#/components/parameters/userIdPathParameter'
    patch:
      summary: Updates user identified by id
      operationId: updateUser
      requestBody:
        description: Contains updated user information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
      tags:
        - user
      responses:
        '200':
          description: Successfully updated user
        '404':
          $ref: '#/components/responses/NotFound'

  '/users/{userId}/search-profiles':
    parameters:
      - $ref: '#/components/parameters/userIdPathParameter'
    get:
      summary: Finds the search profiles associated with a user
      operationId: findAll
      tags:
        - search-profile
      responses:
        '200':
          description: Successfully returns search profiles.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchProfilesByUser'
        '404':
          $ref: '#/components/responses/NotFound'

  '/users/{userId}/statistics':
    parameters:
      - $ref: '#/components/parameters/userIdPathParameter'
    get:
      summary: Gets statistics about user
      operationId: getStatistics
      tags:
        - user
      responses:
        '200':
          description: Successfully returns statistics.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Statistics'
        '404':
          $ref: '#/components/responses/NotFound'

  '/search-profiles':
    post:
      summary: Create search profile
      operationId: create
      tags:
        - search-profile
      requestBody:
        description: Contains search profile information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSearchProfile'
      responses:
        '201':
          description: Search profile successfully created.
        '401':
          description: Unauthorized.

  '/search-profiles/{id}':
    parameters:
      - $ref: '#/components/parameters/searchProfileIdPathParameter'
    delete:
      summary: Deletes a search profile
      operationId: deleteSearchProfile
      tags:
        - search-profile
      responses:
        '204':
          description: Successfully deleted search profile
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      summary: Updates search profile
      operationId: updateSearchProfile
      requestBody:
        description: Contains updated search profile information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSearchProfile'
      tags:
        - search-profile
      responses:
        '200':
          description: Successfully updated search profile
        '404':
          $ref: '#/components/responses/NotFound'

  '/propose-rent-mates':
    post:
      summary: Creates a list of proposed rent mates based on a similarity score for the rent connection initiator
      operationId: proposeRentMates
      tags:
        - rent-connection
      requestBody:
        description: Contains details about the rent connection (initiator, search profiles, proposal size etc.)
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RentConnection'
      responses:
        '200':
          description: Successfully proposed rent mates.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentMateProposal'
        '404':
          $ref: '#/components/responses/NotFound'

  '/rent-connections/active/count':
    get:
      summary: Finds the number of rent connections
      operationId: findActiveRentConnectionsCount
      tags:
        - rent-connection
      responses:
        '200':
          description: Successfully returns the number of active rent connections.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveRentConnectionsCount'
        '404':
          $ref: '#/components/responses/NotFound'

  '/find-initiator-status/{userId}':
    parameters:
      - $ref: '#/components/parameters/userIdPathParameter'
    get:
      summary: Decides the scenario in which the initiator of a rent connection is (MUST_WAIT, CAN_FINALISE, CAN_CREATE)
      operationId: findInitiatorStatus
      tags:
        - rent-connection
      responses:
        '200':
          description: Successfully returns the status of the initiator.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiatorStatus'
        '404':
          $ref: '#/components/responses/NotFound'

  '/rent-connections/{rentConnectionId}':
    parameters:
      - $ref: '#/components/parameters/rentConnectionIdPathParameter'
    patch:
      summary: Updates rent connection
      operationId: updateRentConnection
      requestBody:
        description: Contains updated rent connection information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRentConnection'
      tags:
        - rent-connection
      responses:
        '200':
          description: Successfully updated rent connection
        '404':
          $ref: '#/components/responses/NotFound'

  '/chat-messages/{userId}':
    parameters:
      - $ref: '#/components/parameters/userIdPathParameter'
    get:
      summary: Finds all the messages that are either sent by or sent to user with received id
      operationId: findChatMessagesByUser
      tags:
        - chat
      responses:
        '200':
          description: Successfully returns chat messages of user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMessagesByUser'
        '404':
          $ref: '#/components/responses/NotFound'

  '/notifications/{userId}':
    parameters:
      - $ref: '#/components/parameters/userIdPathParameter'
    get:
      summary: Finds all the notifications received by the user
      operationId: findNotificationReceivedByUser
      tags:
        - notifications
      responses:
        '200':
          description: Successfully returns notifications received by the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationsReceivedByUser'
        '404':
          $ref: '#/components/responses/NotFound'

  '/notifications/read/{notificationId}':
    parameters:
      - $ref: '#/components/parameters/notificationIdPathParameter'
    post:
      summary: Marks notification as read
      operationId: markNotificationAsRead
      tags:
        - notifications
      responses:
        '204':
          description: Successfully marked notification as read
        '404':
          $ref: '#/components/responses/NotFound'

  '/notifications/read-all/{userId}':
    parameters:
      - $ref: '#/components/parameters/userIdPathParameter'
    post:
      summary: Marks all notification received by user as read
      operationId: markAllNotificationsAsRead
      tags:
        - notifications
      responses:
        '204':
          description: Successfully marked all notification received by user as read
        '404':
          $ref: '#/components/responses/NotFound'

components:
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BusinessException'

  schemas:
    BusinessException:
      type: object
      properties:
        code:
          type: string
          description: |
            Indicates a predefined error that can occur.
            * `FIELD_NOT_VALID` - A data transfer object field is invalid
            * `SIGNUP_INFORMATION_NOT_VALID` - Sign up information is invalid
            * `LOGIN_FAILED` - Something unexpected happened during log in process
            * `CONFIRMATION_CODE_NOT_VALID` - Confirmation code is not associated to any account or it is expired
            * `EMAIL_SENDING_FAILED` - Confirmation email sending process failed
            * `RESOURCE_NOT_FOUND` - Resource not found

          enum:
            - FIELD_NOT_VALID
            - SIGNUP_INFORMATION_NOT_VALID
            - LOGIN_FAILED
            - CONFIRMATION_CODE_NOT_VALID
            - EMAIL_SENDING_FAILED
            - RESOURCE_NOT_FOUND
        messages:
          type: array
          items:
            type: string
          description: Error messages displayed to the end user.

    SignupRequest:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        role:
          type: string
        password:
          type: string
      required:
        - username
        - email
        - role
        - password

    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password

    ConfirmAccountRequest:
      type: object
      properties:
        userId:
          type: integer
          format: int64
      required:
        - userId

    ResendConfirmationCodeRequest:
      type: object
      properties:
        userId:
          type: integer
          format: int64
      required:
        - userId

    SignupResponse:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        email:
          type: string
        message:
          type: string
      required:
        - userId
        - email
        - message

    JwtLoginResponse:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        token:
          type: string
        tokenType:
          type: string
        username:
          type: string
        email:
          type: string
        role:
          type: string
        birthDate:
          type: string
        description:
          type: string
        isSearching:
          type: boolean
      required:
        - userId
        - token
        - tokenType
        - username
        - email
        - role
        - birthDate
        - description
        - isSearching

    MessageResponse:
      type: object
      properties:
        message:
          type: string
      required:
        - message

    UpdateUser:
      type: object
      properties:
        description:
          type: string
        isSearching:
          type: boolean
      required:
        - description
        - isSearching

    CreateSearchProfile:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        rentPriceLowerBound:
          type: number
          format: double
        rentPriceUpperBound:
          type: number
          format: double
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        rentMatesGenderOptions:
          type: array
          items:
            type: string
        rentMateCountOptions:
          type: array
          items:
            type: string
        bedroomOptions:
          type: array
          items:
            type: string
        bathroomOptions:
          type: array
          items:
            type: string
      required:
        - userId
        - rentPriceLowerBound
        - rentPriceUpperBound
        - latitude
        - longitude
        - rentMatesGenderOptions
        - rentMateCountOptions
        - bedroomOptions
        - bathroomOptions

    UpdateSearchProfile:
      type: object
      properties:
        rentPriceLowerBound:
          type: number
          format: double
        rentPriceUpperBound:
          type: number
          format: double
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        rentMatesGenderOptions:
          type: array
          items:
            type: string
        rentMateCountOptions:
          type: array
          items:
            type: string
        bedroomOptions:
          type: array
          items:
            type: string
        bathroomOptions:
          type: array
          items:
            type: string
      required:
        - rentPriceLowerBound
        - rentPriceUpperBound
        - latitude
        - longitude
        - rentMatesGenderOptions
        - rentMateCountOptions
        - bedroomOptions
        - bathroomOptions

    SearchProfileByUser:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        rentPriceLowerBound:
          type: number
          format: double
        rentPriceUpperBound:
          type: number
          format: double
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        rentMatesGenderOptions:
          type: array
          items:
            type: string
        rentMateCountOptions:
          type: array
          items:
            type: string
        bedroomOptions:
          type: array
          items:
            type: string
        bathroomOptions:
          type: array
          items:
            type: string
      required:
        - id
        - userId
        - rentPriceLowerBound
        - rentPriceUpperBound
        - latitude
        - longitude
        - rentMatesGenderOptions
        - rentMateCountOptions
        - bedroomOptions
        - bathroomOptions

    SearchProfilesByUser:
      type: object
      properties:
        searchProfiles:
          type: array
          items:
            $ref: '#/components/schemas/SearchProfileByUser'
      required:
        - searchProfiles

    Statistics:
      type: object
      properties:
        chattedWithUsers:
          type: array
          items:
            type: integer
            format: int64
        suggestedToUsers:
          type: array
          items:
            type: integer
            format: int64
        suggestedUsers:
          type: array
          items:
            type: integer
            format: int64
      required:
        - chattedWithUsers
        - suggestedToUsers
        - suggestedUsers

    RentConnection:
      type: object
      properties:
        initiatorId:
          type: integer
          format: int64
        proposalMaximumSize:
          type: integer
        searchProfileIds:
          type: array
          items:
            type: integer
            format: int64
      required:
        - initiatorId
        - proposalMaximumSize
        - searchProfileIds

    RentMateProposal:
      type: object
      properties:
        rentConnectionId:
          type: integer
          format: int64
        proposalSize:
          type: integer
        rentMates:
          type: array
          items:
            $ref: '#/components/schemas/ProposedRentMate'
      required:
        - initiatorId
        - proposalSize
        - rentMates

    ProposedRentMate:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
        description:
          type: string
      required:
        - userId
        - username
        - email
        - description

    ActiveRentConnection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        initiatorId:
          type: integer
          format: int64
      required:
        - id
        - initiatorId

    UpdateRentConnection:
      type: object
      properties:
        rentConnectionStatus:
          type: string
          description: |
            Indicates a predefined list of possible statuses in which a rent connection can be.

            * `ACTIVE` - Rent connection is still active
            * `SUCCESS` - Rent connection is finalised as successful
            * `FAILURE` - Rent connection is finalised as failure

          enum:
            - ACTIVE
            - SUCCESS
            - FAILURE
      required:
        - rentConnectionStatus

    InitiatorStatus:
      type: object
      properties:
        initiatorStatus:
          type: string
          description: |
            Indicates a predefined list of possible statuses in which the initiator can be.

            * `MUST_WAIT` - Initiator created a rent connection in the last 24 hours and must wait until he/she can create another one
            * `CAN_FINALISE` - Initiator has an active rent connection which is older than 24 hours and can finalise it in order to create a new one
            * `CAN_CREATE` - Initiator does not have any active rent connection

          enum:
            - MUST_WAIT
            - CAN_FINALISE
            - CAN_CREATE
        minutesToWait:
          type: integer
          format: int64
        activeRentConnection:
          $ref: '#/components/schemas/ActiveRentConnection'
        associatedRentMateProposal:
          $ref: '#/components/schemas/RentMateProposal'
      required:
        - initiatorStatus

    ActiveRentConnectionsCount:
      type: object
      properties:
        count:
          type: integer
      required:
        - count

    ReceivedChatMessage:
      type: object
      properties:
        content:
          type: string
        fromId:
          type: integer
          format: int64
        toId:
          type: integer
          format: int64
        toUsername:
          type: string
      required:
        - content
        - fromId
        - toId
        - toUsername

    ChatMessagesByUser:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/FetchedChatMessage'

    NotificationsReceivedByUser:
      type: object
      properties:
        notifications:
          type: array
          items:
            $ref: '#/components/schemas/FetchedNotification'

    FetchedChatMessage:
      type: object
      properties:
        id:
          type: integer
          format: int64
        content:
          type: string
        fromId:
          type: integer
          format: int64
        toId:
          type: integer
          format: int64
        fromUsername:
          type: string
        toUsername:
          type: string
        sentAtHoursMinutesFormat:
          type: string
        sentOnDayMonthYearFormat:
          type: string
      required:
        - id
        - content
        - fromId
        - toId
        - fromUsername
        - toUsername
        - sentAtHoursMinutesFormat
        - sentOnDayMonthYearFormat

    FetchedNotification:
      type: object
      properties:
        id:
          type: integer
          format: int64
        preview:
          type: string
        fromId:
          type: integer
          format: int64
        toId:
          type: integer
          format: int64
        fromUsername:
          type: string
        toUsername:
          type: string
        sentOnDayMonthYearFormat:
          type: string
        isRead:
          type: boolean
      required:
        - id
        - preview
        - fromId
        - toId
        - fromUsername
        - toUsername
        - sentOnDayMonthYearFormat
        - isRead

  parameters:
    userIdPathParameter:
      name: userId
      description: User id
      in: path
      required: true
      schema:
        type: integer
        format: int64

    notificationIdPathParameter:
      name: notificationId
      description: Notification id
      in: path
      required: true
      schema:
        type: integer
        format: int64

    searchProfileIdPathParameter:
      name: id
      description: Search profile id
      in: path
      required: true
      schema:
        type: integer
        format: int64

    rentConnectionIdPathParameter:
      name: rentConnectionId
      description: Rent connection id
      in: path
      required: true
      schema:
        type: integer
        format: int64

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: [ ]
